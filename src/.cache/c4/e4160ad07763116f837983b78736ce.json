{"id":"../node_modules/@babel/types/lib/clone/cloneNode.js","dependencies":[{"name":"/home/theironduke/webdev/JS_Kurs/Teil_6/Einsendeaufgabe.2/package.json","includedInParent":true,"mtime":1561886932628},{"name":"/home/theironduke/webdev/JS_Kurs/Teil_6/Einsendeaufgabe.2/node_modules/@babel/types/package.json","includedInParent":true,"mtime":1561852498231},{"name":"../definitions","loc":{"line":8,"column":27},"parent":"/home/theironduke/webdev/JS_Kurs/Teil_6/Einsendeaufgabe.2/node_modules/@babel/types/lib/clone/cloneNode.js","resolved":"/home/theironduke/webdev/JS_Kurs/Teil_6/Einsendeaufgabe.2/node_modules/@babel/types/lib/definitions/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cloneNode;\n\nvar _definitions = require(\"../definitions\");\n\nconst has = Function.call.bind(Object.prototype.hasOwnProperty);\n\nfunction cloneIfNode(obj, deep) {\n  if (obj && typeof obj.type === \"string\" && obj.type !== \"CommentLine\" && obj.type !== \"CommentBlock\") {\n    return cloneNode(obj, deep);\n  }\n\n  return obj;\n}\n\nfunction cloneIfNodeOrArray(obj, deep) {\n  if (Array.isArray(obj)) {\n    return obj.map(node => cloneIfNode(node, deep));\n  }\n\n  return cloneIfNode(obj, deep);\n}\n\nfunction cloneNode(node, deep = true) {\n  if (!node) return node;\n  const {\n    type\n  } = node;\n  const newNode = {\n    type\n  };\n\n  if (type === \"Identifier\") {\n    newNode.name = node.name;\n\n    if (has(node, \"optional\") && typeof node.optional === \"boolean\") {\n      newNode.optional = node.optional;\n    }\n\n    if (has(node, \"typeAnnotation\")) {\n      newNode.typeAnnotation = deep ? cloneIfNodeOrArray(node.typeAnnotation, true) : node.typeAnnotation;\n    }\n  } else if (!has(_definitions.NODE_FIELDS, type)) {\n    throw new Error(`Unknown node type: \"${type}\"`);\n  } else {\n    for (const field of Object.keys(_definitions.NODE_FIELDS[type])) {\n      if (has(node, field)) {\n        newNode[field] = deep ? cloneIfNodeOrArray(node[field], true) : node[field];\n      }\n    }\n  }\n\n  if (has(node, \"loc\")) {\n    newNode.loc = node.loc;\n  }\n\n  if (has(node, \"leadingComments\")) {\n    newNode.leadingComments = node.leadingComments;\n  }\n\n  if (has(node, \"innerComments\")) {\n    newNode.innerComments = node.innerComments;\n  }\n\n  if (has(node, \"trailingComments\")) {\n    newNode.trailingComments = node.trailingComments;\n  }\n\n  if (has(node, \"extra\")) {\n    newNode.extra = Object.assign({}, node.extra);\n  }\n\n  return newNode;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@babel/types/lib/clone/cloneNode.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}}],"sources":{"../node_modules/@babel/types/lib/clone/cloneNode.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cloneNode;\n\nvar _definitions = require(\"../definitions\");\n\nconst has = Function.call.bind(Object.prototype.hasOwnProperty);\n\nfunction cloneIfNode(obj, deep) {\n  if (obj && typeof obj.type === \"string\" && obj.type !== \"CommentLine\" && obj.type !== \"CommentBlock\") {\n    return cloneNode(obj, deep);\n  }\n\n  return obj;\n}\n\nfunction cloneIfNodeOrArray(obj, deep) {\n  if (Array.isArray(obj)) {\n    return obj.map(node => cloneIfNode(node, deep));\n  }\n\n  return cloneIfNode(obj, deep);\n}\n\nfunction cloneNode(node, deep = true) {\n  if (!node) return node;\n  const {\n    type\n  } = node;\n  const newNode = {\n    type\n  };\n\n  if (type === \"Identifier\") {\n    newNode.name = node.name;\n\n    if (has(node, \"optional\") && typeof node.optional === \"boolean\") {\n      newNode.optional = node.optional;\n    }\n\n    if (has(node, \"typeAnnotation\")) {\n      newNode.typeAnnotation = deep ? cloneIfNodeOrArray(node.typeAnnotation, true) : node.typeAnnotation;\n    }\n  } else if (!has(_definitions.NODE_FIELDS, type)) {\n    throw new Error(`Unknown node type: \"${type}\"`);\n  } else {\n    for (const field of Object.keys(_definitions.NODE_FIELDS[type])) {\n      if (has(node, field)) {\n        newNode[field] = deep ? cloneIfNodeOrArray(node[field], true) : node[field];\n      }\n    }\n  }\n\n  if (has(node, \"loc\")) {\n    newNode.loc = node.loc;\n  }\n\n  if (has(node, \"leadingComments\")) {\n    newNode.leadingComments = node.leadingComments;\n  }\n\n  if (has(node, \"innerComments\")) {\n    newNode.innerComments = node.innerComments;\n  }\n\n  if (has(node, \"trailingComments\")) {\n    newNode.trailingComments = node.trailingComments;\n  }\n\n  if (has(node, \"extra\")) {\n    newNode.extra = Object.assign({}, node.extra);\n  }\n\n  return newNode;\n}"},"lineCount":78}},"error":null,"hash":"ace2740772c986c0c3307de1191a9e56","cacheData":{"env":{}}}