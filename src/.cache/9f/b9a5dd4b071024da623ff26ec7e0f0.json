{"id":"../node_modules/@babel/types/lib/definitions/experimental.js","dependencies":[{"name":"/home/theironduke/webdev/JS_Kurs/Teil_6/Einsendeaufgabe.2/package.json","includedInParent":true,"mtime":1561886932628},{"name":"/home/theironduke/webdev/JS_Kurs/Teil_6/Einsendeaufgabe.2/node_modules/@babel/types/package.json","includedInParent":true,"mtime":1561852498231},{"name":"./utils","loc":{"line":3,"column":45},"parent":"/home/theironduke/webdev/JS_Kurs/Teil_6/Einsendeaufgabe.2/node_modules/@babel/types/lib/definitions/experimental.js","resolved":"/home/theironduke/webdev/JS_Kurs/Teil_6/Einsendeaufgabe.2/node_modules/@babel/types/lib/definitions/utils.js"},{"name":"./es2015","loc":{"line":5,"column":18},"parent":"/home/theironduke/webdev/JS_Kurs/Teil_6/Einsendeaufgabe.2/node_modules/@babel/types/lib/definitions/experimental.js","resolved":"/home/theironduke/webdev/JS_Kurs/Teil_6/Einsendeaufgabe.2/node_modules/@babel/types/lib/definitions/es2015.js"}],"generated":{"js":"\"use strict\";\n\nvar _utils = _interopRequireWildcard(require(\"./utils\"));\n\nvar _es = require(\"./es2015\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n(0, _utils.default)(\"ArgumentPlaceholder\", {});\n(0, _utils.default)(\"AwaitExpression\", {\n  builder: [\"argument\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields: {}\n});\n(0, _utils.default)(\"ClassProperty\", {\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\n  builder: [\"key\", \"value\", \"typeAnnotation\", \"decorators\", \"computed\"],\n  aliases: [\"Property\"],\n  fields: Object.assign({}, _es.classMethodOrPropertyCommon, {\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    definite: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    readonly: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  })\n});\n(0, _utils.default)(\"OptionalMemberExpression\", {\n  builder: [\"object\", \"property\", \"computed\", \"optional\"],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    property: {\n      validate: function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n        return function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n      }()\n    },\n    computed: {\n      default: false\n    },\n    optional: {\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    }\n  }\n});\n(0, _utils.default)(\"PipelineTopicExpression\", {\n  builder: [\"expression\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"PipelineBareFunction\", {\n  builder: [\"callee\"],\n  visitor: [\"callee\"],\n  fields: {\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"PipelinePrimaryTopicReference\", {\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"OptionalCallExpression\", {\n  visitor: [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\", \"optional\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    arguments: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"SpreadElement\", \"JSXNamespacedName\")))\n    },\n    optional: {\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    },\n    typeArguments: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\"),\n      optional: true\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  }\n});\n(0, _utils.default)(\"ClassPrivateProperty\", {\n  visitor: [\"key\", \"value\"],\n  builder: [\"key\", \"value\"],\n  aliases: [\"Property\", \"Private\"],\n  fields: {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"PrivateName\")\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    }\n  }\n});\n(0, _utils.default)(\"ClassPrivateMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"static\"],\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\", \"Private\"],\n  fields: Object.assign({}, _es.classMethodOrDeclareMethodCommon, {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"PrivateName\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  })\n});\n(0, _utils.default)(\"Import\", {\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"DoExpression\", {\n  visitor: [\"body\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  }\n});\n(0, _utils.default)(\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"ExportNamespaceSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"PrivateName\", {\n  visitor: [\"id\"],\n  aliases: [\"Private\"],\n  fields: {\n    id: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"BigIntLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/@babel/types/lib/definitions/experimental.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}}],"sources":{"../node_modules/@babel/types/lib/definitions/experimental.js":"\"use strict\";\n\nvar _utils = _interopRequireWildcard(require(\"./utils\"));\n\nvar _es = require(\"./es2015\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n(0, _utils.default)(\"ArgumentPlaceholder\", {});\n(0, _utils.default)(\"AwaitExpression\", {\n  builder: [\"argument\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields: {}\n});\n(0, _utils.default)(\"ClassProperty\", {\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\n  builder: [\"key\", \"value\", \"typeAnnotation\", \"decorators\", \"computed\"],\n  aliases: [\"Property\"],\n  fields: Object.assign({}, _es.classMethodOrPropertyCommon, {\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    definite: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    readonly: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  })\n});\n(0, _utils.default)(\"OptionalMemberExpression\", {\n  builder: [\"object\", \"property\", \"computed\", \"optional\"],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    property: {\n      validate: function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n        return function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n      }()\n    },\n    computed: {\n      default: false\n    },\n    optional: {\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    }\n  }\n});\n(0, _utils.default)(\"PipelineTopicExpression\", {\n  builder: [\"expression\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"PipelineBareFunction\", {\n  builder: [\"callee\"],\n  visitor: [\"callee\"],\n  fields: {\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"PipelinePrimaryTopicReference\", {\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"OptionalCallExpression\", {\n  visitor: [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\", \"optional\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    arguments: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"SpreadElement\", \"JSXNamespacedName\")))\n    },\n    optional: {\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    },\n    typeArguments: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\"),\n      optional: true\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  }\n});\n(0, _utils.default)(\"ClassPrivateProperty\", {\n  visitor: [\"key\", \"value\"],\n  builder: [\"key\", \"value\"],\n  aliases: [\"Property\", \"Private\"],\n  fields: {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"PrivateName\")\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    }\n  }\n});\n(0, _utils.default)(\"ClassPrivateMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"static\"],\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\", \"Private\"],\n  fields: Object.assign({}, _es.classMethodOrDeclareMethodCommon, {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"PrivateName\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  })\n});\n(0, _utils.default)(\"Import\", {\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"DoExpression\", {\n  visitor: [\"body\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  }\n});\n(0, _utils.default)(\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"ExportNamespaceSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"PrivateName\", {\n  visitor: [\"id\"],\n  aliases: [\"Private\"],\n  fields: {\n    id: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"BigIntLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});"},"lineCount":205}},"error":null,"hash":"1718925b4ba6b5c3ef6f0d6d42ab3eb8","cacheData":{"env":{}}}