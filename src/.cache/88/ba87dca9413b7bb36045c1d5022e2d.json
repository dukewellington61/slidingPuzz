{"id":"../node_modules/@babel/types/lib/asserts/assertNode.js","dependencies":[{"name":"/home/theironduke/webdev/JS_Kurs/Teil_6/Einsendeaufgabe.2/package.json","includedInParent":true,"mtime":1561886932628},{"name":"/home/theironduke/webdev/JS_Kurs/Teil_6/Einsendeaufgabe.2/node_modules/@babel/types/package.json","includedInParent":true,"mtime":1561852498231},{"name":"../validators/isNode","loc":{"line":8,"column":45},"parent":"/home/theironduke/webdev/JS_Kurs/Teil_6/Einsendeaufgabe.2/node_modules/@babel/types/lib/asserts/assertNode.js","resolved":"/home/theironduke/webdev/JS_Kurs/Teil_6/Einsendeaufgabe.2/node_modules/@babel/types/lib/validators/isNode.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertNode;\n\nvar _isNode = _interopRequireDefault(require(\"../validators/isNode\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction assertNode(node) {\n  if (!(0, _isNode.default)(node)) {\n    const type = node && node.type || JSON.stringify(node);\n    throw new TypeError(`Not a valid node of type \"${type}\"`);\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}}],"sources":{"../node_modules/@babel/types/lib/asserts/assertNode.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertNode;\n\nvar _isNode = _interopRequireDefault(require(\"../validators/isNode\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction assertNode(node) {\n  if (!(0, _isNode.default)(node)) {\n    const type = node && node.type || JSON.stringify(node);\n    throw new TypeError(`Not a valid node of type \"${type}\"`);\n  }\n}"},"lineCount":17}},"error":null,"hash":"568ba106f194b8a9ce82da8841e5c0a7","cacheData":{"env":{}}}